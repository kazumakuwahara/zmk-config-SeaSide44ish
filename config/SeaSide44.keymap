#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE  &kp Q             &kp W      &kp E             &kp R                                   &kp T                                      &kp Y        &kp U  &kp I         &kp O       &kp P          &kp BACKSPACE
&kp TAB     &kp A             &kp S      &kp D             &kp F                                   &kp G                                      &kp H        &kp J  &kp K         &kp L       &kp SEMICOLON  &kp SQT
&kp LSHFT   &mt LEFT_SHIFT Z  &kp X      &kp C             &kp V                                   &kp B                                      &kp N        &kp M  &kp COMMA     &kp PERIOD  &kp SLASH      &lt 5 RIGHT_SHIFT
                              &kp LCTRL  &kp LEFT_COMMAND  &mt LC(LG(LEFT_CONTROL)) LANG_HIRAGANA  &lt 4 SPACE  &lt 5 LANG2    &kp BACKSPACE  &lt 2 ENTER         &lt 5 ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&trans  &kp PRCNT  &kp DOLLAR  &kp AMPERSAND  &kp CARET        &kp FSLH                           &kp BSLH        &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LESS_THAN  &kp GREATER_THAN   &kp N0
&trans  &kp AT     &kp HASH    &kp ASTERISK   &kp PLUS         &kp EQUAL                          &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMI       &kp COLON          &kp N1
&trans  &kp GRAVE  &kp TILDE   &kp MINUS      &kp EXCLAMATION  &kp QUESTION                       &kp PIPE        &kp LBKT              &kp RBKT               &kp SQT        &kp DOUBLE_QUOTES  &kp N2
                   &trans      &trans         &trans           &trans        &trans    &kp COMMA  &kp PERIOD                            &kp ESC
            >;
        };

        NUM {
            bindings = <
&trans  &trans  &kp F9  &kp F10  &kp F11  &kp F12                    &kp N7        &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &kp N0
&trans  &trans  &kp F5  &kp F6   &kp F7   &kp F8                     &kp NUMBER_4  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp SLASH        &kp N1
&trans  &trans  &kp F1  &kp F2   &kp F3   &kp F4                     &kp NUMBER_1  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp COLON        &kp N2
                &trans  &trans   &trans   &trans   &trans    &trans  &kp NUMBER_0                   &kp PERIOD
            >;
        };

        ARROW {
            bindings = <
&trans  &kp ESCAPE      &mkp MB4                &kp UP_ARROW    &mkp MB5                 &trans                     &kp LG(LEFT_ARROW)          &kp LA(LEFT_ARROW)      &kp UP_ARROW    &kp RA(RIGHT_ARROW)      &kp RG(RIGHT_ARROW)          &kp N0
&trans  &kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END                    &kp LC(LS(TAB))             &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp RC(TAB)                  &kp N1
&trans  &kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans                     &kp LA(LG(LC(LEFT_ARROW)))  &kp LA(LG(LEFT_ARROW))  &kp LA(LG(F))   &kp RG(RA(RIGHT_ARROW))  &kp RA(RC(RG(RIGHT_ARROW)))  &kp N2
                        &trans                  &trans          &trans                   &trans   &trans    &trans  &trans                                              &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9    &kp NUMBER_0    &kp LS(UNDERSCORE)  &kp LS(MINUS)
&trans  &kp Q         &kp S         &kp E         &kp R         &kp T                           &trans        &mkp MB1      &mkp MB2        &kp UP_ARROW    &kp LS(SEMICOLON)   &kp LS(SQT)
&trans  &trans        &trans        &trans        &trans        &trans                          &trans        &trans        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW     &kp N2
                      &trans        &trans        &trans        &trans        &trans    &trans  &trans                      &trans
            >;
        };

        SCROLL {
            bindings = <
&trans          &trans  &trans  &trans  &trans  &kp NUMBER_4                                    &trans            &trans  &trans    &kp LS(LEFT_BRACKET)  &kp LS(RIGHT_BRACKET)  &kp LS(NON_US_BACKSLASH)
&trans          &trans  &trans  &trans  &trans  &trans                                          &trans            &trans  &trans    &kp UP_ARROW          &trans                 &kp N1
&kp LEFT_SHIFT  &trans  &trans  &trans  &trans  &trans                                          &trans            &trans  &kp DOWN  &kp DOWN_ARROW        &kp RIGHT_ARROW        &kp N2
                        &trans  &trans  &trans  &kp LS(LG(N5))  &kp LS(LG(N4))    &kp LC(DOWN)  &kp LC(UP_ARROW)          &trans
            >;
        };

        CONFIG {
            bindings = <
&trans  &bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N0
&trans  &trans          &trans        &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N1
&trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &bootloader  &trans  &trans  &trans  &trans  &kp N2
                        &trans        &trans        &trans        &trans        &trans    &trans  &trans               &trans
            >;
        };
    };
};
